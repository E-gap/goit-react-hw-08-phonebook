{"version":3,"file":"static/js/583.8f78cab8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"block\":\"ContactForm_block__1h2W+\"};","import { addContacts } from '../../redux/contacts/contactsOperations';\nimport { useDispatch } from 'react-redux';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      name: event.target.elements.name.value,\n      number: event.target.elements.phone.value,\n    };\n    dispatch(addContacts(contact));\n    event.target.reset();\n  };\n\n  return (\n    <form\n      className={`${css.contactForm} ${css.block}`}\n      onSubmit={handlerSubmit}\n    >\n      <label className={css.block}>\n        Name\n        <input\n          className={css.block}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.block}>\n        phone\n        <input\n          className={css.block}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"Submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__upGA2\",\"icon\":\"ContactListItem_icon__44oEf\",\"buttonDelete\":\"ContactListItem_buttonDelete__965SC\"};","import PropTypes from 'prop-types';\nimport { BsFillCircleFill } from 'react-icons/bs';\nimport { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/contactsOperations';\nimport css from './ContactListItem.module.css';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li className={css.listItem}>\n      <div>\n        <span className={css.icon}>\n          <BsFillCircleFill\n            style={{\n              height: '20px',\n              width: '20px',\n            }}\n          />\n        </span>\n        {name}: {number}\n      </div>\n      <button\n        type=\"button\"\n        className={css.buttonDelete}\n        onClick={() => {\n          dispatch(deleteContacts(id));\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"warning\":\"ContactList_warning__kHXBR\"};","import ContactListItem from '../ContactListItem/ContactListItem.jsx';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contacts);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const filter = useSelector(state => state.filter.filter);\n  const isLogin = useSelector(state => state.auth.isLogin);\n\n  const filterContacts = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const filteredContacts = filterContacts();\n\n  const renderFilteredContacts = filteredContacts.length > 0 || isLoading;\n  const notFilteredContacts =\n    filteredContacts.length === 0 && contacts.length > 0;\n\n  return (\n    <div>\n      {renderFilteredContacts && (\n        <ul className={css.contactList}>\n          {filteredContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ul>\n      )}\n      {notFilteredContacts && (\n        <p className={css.warning}>\n          There are not such contacts in this phonebook\n        </p>\n      )}\n      {contacts.length === 0 && isLogin && (\n        <p className={css.warning}>There are not contacts in this phonebook</p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"Filter_block__rFk3H\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter } from '../../redux/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter.filter);\n\n  return (\n    <div className={css.filter}>\n      <label className={css.block}>\n        Find contacts by name\n        <input\n          className={css.block}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={event =>\n            dispatch(changeFilter({ filter: event.target.value }))\n          }\n        ></input>\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.contacts.error);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div\n      style={{\n        height: '100vh',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n        paddingLeft: '50px',\n      }}\n    >\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <h2>Loading contacts....</h2>}\n      {error ? (\n        <h2 style={{ color: 'red' }}>An error occured: {error}</h2>\n      ) : (\n        <ContactList />\n      )}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","className","css","onSubmit","event","preventDefault","contact","name","target","elements","value","number","phone","addContacts","reset","type","pattern","title","required","id","style","height","width","onClick","deleteContacts","contacts","useSelector","state","isLoading","filter","isLogin","auth","filteredContacts","toLowerCase","includes","renderFilteredContacts","length","notFilteredContacts","map","onChange","changeFilter","Contacts","error","useEffect","fetchContacts","justifyContent","alignItems","fontSize","color","paddingLeft"],"sourceRoot":""}